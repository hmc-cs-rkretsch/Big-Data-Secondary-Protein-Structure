###
### Using 'darwin' toolset.
###
rm -rf bootstrap
mkdir bootstrap
cc -o bootstrap/jam0 command.c compile.c debug.c expand.c glob.c hash.c hdrmacro.c headers.c jam.c jambase.c jamgram.c lists.c make.c make1.c newstr.c option.c output.c parse.c pathunix.c pathvms.c regexp.c rules.c scan.c search.c subst.c timestamp.c variable.c modules.c strings.c filesys.c builtins.c pwd.c class.c native.c md5.c w32_getreg.c modules/set.c modules/path.c modules/regex.c modules/property-set.c modules/sequence.c modules/order.c execunix.c fileunix.c
expand.c:85:28: warning: field precision should have type 'int', but argument has type 'long' [-Wformat]
        printf( "expand '%.*s'\n", end - in, in );
                         ~~^~      ~~~~~~~~
1 warning generated.
make.c:269:37: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "make\t--\t%s%s\n", spaces( depth ), t->name );
                                    ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:269:37: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:276:37: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "make\t--\t%s%s\n", spaces( depth ), t->name );
                                    ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:276:37: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:346:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, t->boundname );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:346:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:354:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, target_bind[ (int) t->binding ] );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:354:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:359:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, ctime( &t->time ) );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:359:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:640:13: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            spaces( depth ), t->name );
            ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:640:13: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
6 warnings generated.
./bootstrap/jam0 -f build.jam --toolset=darwin --toolset-root= clean
...found 1 target...
...updating 1 target...
[DELETE] clean
...updated 1 target...
./bootstrap/jam0 -f build.jam --toolset=darwin --toolset-root=
...found 48 targets...
...updating 1 target...
[COMPILE] bin.macosxx86_64/bjam
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: optimization flag '-finline-functions' is not supported
clang: warning: argument unused during compilation: '-finline-functions'
expand.c:85:28: warning: field precision should have type 'int', but argument has type 'long' [-Wformat]
        printf( "expand '%.*s'\n", end - in, in );
                         ~~^~      ~~~~~~~~
1 warning generated.
make.c:269:37: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "make\t--\t%s%s\n", spaces( depth ), t->name );
                                    ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:269:37: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:276:37: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "make\t--\t%s%s\n", spaces( depth ), t->name );
                                    ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:276:37: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:346:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, t->boundname );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:346:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:354:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, target_bind[ (int) t->binding ] );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:354:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:359:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                spaces( depth ), t->name, ctime( &t->time ) );
                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:359:17: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:640:13: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            spaces( depth ), t->name );
            ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:640:13: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:677:39: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "->%s%2d Name: %s\n", spaces( depth ), depth, target_name( t ) );
                                      ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:677:39: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:680:39: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s%2d Name: %s\n", spaces( depth ), depth, target_name( t ) );
                                      ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:680:39: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:685:38: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s    Loc: %s\n", spaces( depth ), t->boundname );
                                     ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:685:38: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:690:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Stable\n", spaces( depth ) );
                                         ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:690:42: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:693:41: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Newer\n", spaces( depth ) );
                                        ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:693:41: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:696:56: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Up to date temp file\n", spaces( depth ) );
                                                       ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:696:56: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:699:65: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Temporary file, to be updated\n", spaces( depth ) );
                                                                ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:699:65: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:702:61: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Been touched, updating it\n", spaces( depth ) );
                                                            ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:702:61: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:705:56: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Missing, creating it\n", spaces( depth ) );
                                                       ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:705:56: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:708:57: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Outdated, updating it\n", spaces( depth ) );
                                                        ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:708:57: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:711:56: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Rebuild, updating it\n", spaces( depth ) );
                                                       ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:711:56: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:714:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Updating it\n", spaces( depth ) );
                                              ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:714:47: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:717:51: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Can not find it\n", spaces( depth ) );
                                                  ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:717:51: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:720:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Can make it\n", spaces( depth ) );
                                              ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:720:47: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:726:34: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : ", spaces( depth ) );
                                 ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:726:34: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
make.c:738:52: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        printf( "  %s       : Depends on %s (%s)", spaces( depth ),
                                                   ^~~~~~~~~~~~~~~
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make.c:738:52: note: use array indexing to silence this warning
make.c:102:45: note: expanded from macro 'spaces'
# define spaces(x) ( "                    " + ( x > 20 ? 0 : 20-x ) )
                                            ^
22 warnings generated.
...updated 1 target...
